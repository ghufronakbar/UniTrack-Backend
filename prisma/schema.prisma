datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  picture  String?

  shouldRemindTasks Boolean @default(false)

  semesters Semester[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Semester {
  id   String @id @default(uuid())
  name String

  dateStart DateTime
  dateEnd   DateTime

  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  courses Course[]

  markAsDone Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Course {
  id         String @id @default(uuid())
  name       String
  code       String
  instructor String

  semesterId String
  semester   Semester @relation(fields: [semesterId], references: [id], onDelete: Cascade)
  tasks      Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Task {
  id       String   @id @default(uuid())
  name     String
  deadline DateTime

  priority Priority @default(LOW)
  isDone   Boolean  @default(false)

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
